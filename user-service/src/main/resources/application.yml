server:
  port: 8081
spring:
  application:
    name: UserService
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.199.128
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource #数据源，这里用的Druid
    driver-class-name: com.mysql.cj.jdbc.Driver #驱动
    url: jdbc:mysql://192.168.199.128:3306/user?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
    username: root #数据库用户名
    password: 123456 #密码
    druid:
      initialSize: 10   #初始化连接个数
      minIdle: 10       #最小空闲连接个数
      maxActive: 100    #最大连接个数
      maxWait: 60000    #获取连接时最大等待时间，单位毫秒。
      timeBetweenEvictionRunsMillis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 30000     #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: select 'x' #用来检测连接是否有效的sql，要求是一个查询语句。
      testWhileIdle: true       #建议配置为true，不影响性能，并且保证安全性。如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testOnBorrow: true        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false       #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      poolPreparedStatements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      maxPoolPreparedStatementPerConnectionSize: -1 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      filters: stat,wall #通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat，日志用的filter:log4j，防御sql注入的filter:wall
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      useGlobalDataSourceStat: false # 合并多个DruidDataSource的监控数据
  cache:
    type: redis
  redis:
    host: 192.168.199.128
    port: 6379
    password: 123456

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:cuit/epoch/pymjl/mapper/xml/*.xml
  type-aliases-package: cuit.epoch.pymjl.entity

management:
  endpoints:
    web:
      exposure:
        include: "*"

dubbo:
  application:
    name: ${spring.application.name}
    logger: slf4j
  protocol:
    name: dubbo
    port: -1
  registry:
    address: nacos://192.168.199.128:8848
  config-center:
    address: nacos://192.168.199.128:8848
  metadata-report:
    address: nacos://192.168.199.128:8848
  consumer:
    validation: true
    timeout: 3000
    check: false
  scan:
    base-packages: cuit.epoch.pymjl.dubbo